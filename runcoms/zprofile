#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#
# Browser
#

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

#
# Editors
#

export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  /usr/local/{bin,sbin}
  $path
)

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

#
# Temporary Files
#

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$LOGNAME"
  mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

eval "$(/opt/homebrew/bin/brew shellenv)"

# Alias list
alias z='j'
alias python='python3'

alias g='git'
alias gb='git branch'
alias gcob='git checkout -b'
alias gco='git checkout'
alias ga='git add'
alias gplr='git pull origin --rebase'
alias gplo='git pull origin'
alias gpc='git push --set-upstream origin "$(git-branch-current 2> /dev/null)"'
alias gs='git status'
alias gst='git stash'
alias gcm='git commit -m'
alias gam='git commit --amend --no-edit'
alias gp='git push'
alias gpf='git push --force'
alias gpl='git pull'
function safe_force_push() {
  current_branch=$(git rev-parse --abbrev-ref HEAD)
  if [[ "$current_branch" == "main" || "$current_branch" == "master" ]]; then
    echo "Cannot force push to $current_branch"
  else
    git push --force-with-lease
  fi
}
# Output list of recently checked out branches
alias gh="git reflog | grep -i 'checkout:' | awk '{print \$1 \" \" \$2 \" \\033[32m\" \$NF \"\\033[0m\"}'"

function gcmm() {
    # Get the current branch name
    local branch_name=$(git symbolic-ref --short HEAD 2>/dev/null)

    # Check if the branch name is available
    if [ -n "$branch_name" ]; then
        # Extract the prefix (e.g., ticket number or ID)
        local prefix=$(echo "$branch_name" | cut -d'_' -f1)
        # Extract the rest of the branch name and format it nicely
        local description=$(echo "$branch_name" | cut -d'_' -f2- | tr '_' ' ')

        # Build the commit message
        local commit_message="$prefix $description"

        # Open an interactive editor with the commit message pre-filled
        git commit -m "$commit_message"
    else
        echo "Error: Could not detect a Git branch name."
    fi
}


alias gpf=safe_force_push
# Setting PATH for Python 3.11
# The original version is saved in .zprofile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.11/bin:${PATH}"
export PATH
